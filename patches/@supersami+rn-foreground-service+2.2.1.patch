diff --git a/node_modules/@supersami/rn-foreground-service/index.d.ts b/node_modules/@supersami/rn-foreground-service/index.d.ts
index 63675b0..957ec82 100644
--- a/node_modules/@supersami/rn-foreground-service/index.d.ts
+++ b/node_modules/@supersami/rn-foreground-service/index.d.ts
@@ -52,7 +52,7 @@ declare const ReactNativeForegroundService: {
     };
     color?: string;
     setOnlyAlertOnce?: string;
-  }) => Promise<void>;
+  }) => Promise<boolean>;
   update: ({
     id,
     title,
diff --git a/node_modules/@supersami/rn-foreground-service/index.js b/node_modules/@supersami/rn-foreground-service/index.js
index 081ae65..d54b5ae 100644
--- a/node_modules/@supersami/rn-foreground-service/index.js
+++ b/node_modules/@supersami/rn-foreground-service/index.js
@@ -3,7 +3,8 @@ import {
   AppRegistry,
   DeviceEventEmitter,
   NativeEventEmitter,
-  Alert
+  Alert,
+  Platform
 } from 'react-native';
 
 // ANDROID ONLY
@@ -244,10 +245,14 @@ const start = async ({
         loopDelay: samplingInterval,
         onLoop: true,
       });
-    } else console.log('Foreground service is already running.');
+    } else {
+      console.log('Foreground service is already running.');
+      return true
+    }
   } catch (error) {
     throw error;
   }
+  return false
 };
 
 const update = async ({
@@ -397,7 +402,10 @@ const eventListener = callBack => {
   };
 };
 
-const eventEmitter = new NativeEventEmitter(ForegroundServiceModule);
+let eventEmitter
+if (Platform.OS === 'android') {
+  eventEmitter = new NativeEventEmitter(ForegroundServiceModule);
+}
 export function setupServiceErrorListener({onServiceFailToStart, alert}) {
   const listener = eventEmitter.addListener('onServiceError', message => {
     alert && Alert.alert('Service Error', message);
